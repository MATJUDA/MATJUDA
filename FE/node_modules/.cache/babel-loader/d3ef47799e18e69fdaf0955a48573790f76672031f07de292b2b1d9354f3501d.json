{"ast":null,"code":"import React,{useState}from\"react\";import BestComment from\"../bestComment/BestComment\";import LikeDislike from\"../like_dislike/LikeDislike\";import MenuName from\"../menuName/MenuName\";import Picture from\"../picture/Picture\";import State from\"../state/State\";import\"./style.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function MenuCard(_ref){let{details={},initialState,bestComment,likes,dislikes}=_ref;const{pictureUrl,corner,menuName}=details;const[likeCount,setLikeCount]=useState(likes);const[dislikeCount,setDislikeCount]=useState(dislikes);const[hasClicked,setHasClicked]=useState(false);const handleLike=()=>{const newLikeCount=likeCount+1;setLikeCount(newLikeCount);setHasClicked(true);fetch(\"/api/like\",{method:\"POST\",body:JSON.stringify({menuName,action:\"like\"}),headers:{\"Content-Type\":\"application/json\"}}).then(response=>response.json()).then(data=>{setLikeCount(data.likes);setDislikeCount(data.dislikes);}).catch(()=>{// 롤백\nsetLikeCount(likeCount);setHasClicked(false);});};const handleDislike=()=>{const newDislikeCount=dislikeCount+1;setDislikeCount(newDislikeCount);setHasClicked(true);fetch(\"/api/like\",{// 서버에서 like와 dislike를 같은 엔드포인트로 처리하는 경우\nmethod:\"POST\",body:JSON.stringify({menuName,action:\"dislike\"}),headers:{\"Content-Type\":\"application/json\"}}).then(response=>response.json()).then(data=>{setLikeCount(data.likes);setDislikeCount(data.dislikes);}).catch(()=>{// 롤백\nsetDislikeCount(dislikeCount);setHasClicked(false);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"frame\",children:[pictureUrl&&/*#__PURE__*/_jsx(Picture,{url:pictureUrl}),corner&&menuName&&/*#__PURE__*/_jsx(MenuName,{corner:corner,menuName:menuName}),/*#__PURE__*/_jsx(State,{getSignal:initialState}),bestComment&&/*#__PURE__*/_jsx(BestComment,{bestComment:bestComment}),/*#__PURE__*/_jsx(LikeDislike,{downRate:dislikeCount,upRate:likeCount,onLike:handleLike,onDislike:handleDislike,hasClicked:hasClicked})]});}","map":{"version":3,"names":["React","useState","BestComment","LikeDislike","MenuName","Picture","State","jsx","_jsx","jsxs","_jsxs","MenuCard","_ref","details","initialState","bestComment","likes","dislikes","pictureUrl","corner","menuName","likeCount","setLikeCount","dislikeCount","setDislikeCount","hasClicked","setHasClicked","handleLike","newLikeCount","fetch","method","body","JSON","stringify","action","headers","then","response","json","data","catch","handleDislike","newDislikeCount","className","children","url","getSignal","downRate","upRate","onLike","onDislike"],"sources":["/Users/bblogs/Desktop/matjuda1/src/components/menuCard/MenuCard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport BestComment from \"../bestComment/BestComment\";\nimport LikeDislike from \"../like_dislike/LikeDislike\";\nimport MenuName from \"../menuName/MenuName\";\nimport Picture from \"../picture/Picture\";\nimport State from \"../state/State\";\nimport \"./style.css\";\n\nexport default function MenuCard({\n  details = {},\n  initialState,\n  bestComment,\n  likes,\n  dislikes,\n}) {\n  const { pictureUrl, corner, menuName } = details;\n  const [likeCount, setLikeCount] = useState(likes);\n  const [dislikeCount, setDislikeCount] = useState(dislikes);\n  const [hasClicked, setHasClicked] = useState(false);\n\n  const handleLike = () => {\n    const newLikeCount = likeCount + 1;\n    setLikeCount(newLikeCount);\n    setHasClicked(true);\n\n    fetch(\"/api/like\", {\n      method: \"POST\",\n      body: JSON.stringify({ menuName, action: \"like\" }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setLikeCount(data.likes);\n        setDislikeCount(data.dislikes);\n      })\n      .catch(() => {\n        // 롤백\n        setLikeCount(likeCount);\n        setHasClicked(false);\n      });\n  };\n\n  const handleDislike = () => {\n    const newDislikeCount = dislikeCount + 1;\n    setDislikeCount(newDislikeCount);\n    setHasClicked(true);\n\n    fetch(\"/api/like\", {\n      // 서버에서 like와 dislike를 같은 엔드포인트로 처리하는 경우\n      method: \"POST\",\n      body: JSON.stringify({ menuName, action: \"dislike\" }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setLikeCount(data.likes);\n        setDislikeCount(data.dislikes);\n      })\n      .catch(() => {\n        // 롤백\n        setDislikeCount(dislikeCount);\n        setHasClicked(false);\n      });\n  };\n\n  return (\n    <div className=\"frame\">\n      {pictureUrl && <Picture url={pictureUrl} />}\n      {corner && menuName && <MenuName corner={corner} menuName={menuName} />}\n      <State getSignal={initialState} />\n      {bestComment && <BestComment bestComment={bestComment} />}\n      <LikeDislike\n        downRate={dislikeCount}\n        upRate={likeCount}\n        onLike={handleLike}\n        onDislike={handleDislike}\n        hasClicked={hasClicked}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}