{"ast":null,"code":"var _jsxFileName = \"/Users/bblogs/Desktop/matjuda1/src/components/menuCard/MenuCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BestComment from '../bestComment/BestComment';\nimport LikeDislike from '../like_dislike/LikeDislike';\nimport MenuName from '../menuName/MenuName';\nimport Picture from '../picture/Picture';\nimport State from '../state/State';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MenuCard({\n  pictureUrl,\n  menuName,\n  initialState,\n  bestComment,\n  likes,\n  dislikes\n}) {\n  _s();\n  const [likeCount, setLikeCount] = useState(likes);\n  const [dislikeCount, setDislikeCount] = useState(dislikes);\n  const [hasClicked, setHasClicked] = useState(false);\n  const handleLike = () => {\n    const newLikeCount = likeCount + 1;\n    setLikeCount(newLikeCount);\n    setHasClicked(true);\n    fetch('/api/like', {\n      method: 'POST',\n      body: JSON.stringify({\n        menuName,\n        action: 'like'\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setLikeCount(data.likes);\n      setDislikeCount(data.dislikes);\n    }).catch(() => {\n      // 롤백\n      setLikeCount(likeCount);\n      setHasClicked(false);\n    });\n  };\n  const handleDislike = () => {\n    const newDislikeCount = dislikeCount + 1;\n    setDislikeCount(newDislikeCount);\n    setHasClicked(true);\n    fetch('/api/like', {\n      // 서버에서 like와 dislike를 같은 엔드포인트로 처리하는 경우\n      method: 'POST',\n      body: JSON.stringify({\n        menuName,\n        action: 'dislike'\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setLikeCount(data.likes);\n      setDislikeCount(data.dislikes);\n    }).catch(() => {\n      // 롤백\n      setDislikeCount(dislikeCount);\n      setHasClicked(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"frame\",\n    children: [/*#__PURE__*/_jsxDEV(Picture, {\n      url: pictureUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuName, {\n      menuName: menuName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(State, {\n      getSignal: initialState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BestComment, {\n      bestComment: bestComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LikeDislike, {\n      downRate: dislikeCount,\n      upRate: likeCount,\n      onLike: handleLike,\n      onDislike: handleDislike,\n      hasClicked: hasClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(MenuCard, \"/97wNAbRPAvjCXyrIsaHZgcgKOE=\");\n_c = MenuCard;\nvar _c;\n$RefreshReg$(_c, \"MenuCard\");","map":{"version":3,"names":["React","useState","BestComment","LikeDislike","MenuName","Picture","State","jsxDEV","_jsxDEV","MenuCard","pictureUrl","menuName","initialState","bestComment","likes","dislikes","_s","likeCount","setLikeCount","dislikeCount","setDislikeCount","hasClicked","setHasClicked","handleLike","newLikeCount","fetch","method","body","JSON","stringify","action","headers","then","response","json","data","catch","handleDislike","newDislikeCount","className","children","url","fileName","_jsxFileName","lineNumber","columnNumber","getSignal","downRate","upRate","onLike","onDislike","_c","$RefreshReg$"],"sources":["/Users/bblogs/Desktop/matjuda1/src/components/menuCard/MenuCard.jsx"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport BestComment from '../bestComment/BestComment';\nimport LikeDislike from '../like_dislike/LikeDislike';\nimport MenuName from '../menuName/MenuName';\nimport Picture from '../picture/Picture';\nimport State from '../state/State';\nimport './style.css';\n\nexport default function MenuCard({ pictureUrl, menuName, initialState, bestComment, likes, dislikes }) {\n  const [likeCount, setLikeCount] = useState(likes);\n  const [dislikeCount, setDislikeCount] = useState(dislikes);\n  const [hasClicked, setHasClicked] = useState(false);\n\n  const handleLike = () => {\n    const newLikeCount = likeCount + 1;\n    setLikeCount(newLikeCount);\n    setHasClicked(true);\n \n    fetch('/api/like', {\n      method: 'POST',\n      body: JSON.stringify({ menuName, action: 'like' }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n    .then(response => response.json())\n    .then(data => {\n      setLikeCount(data.likes);\n      setDislikeCount(data.dislikes);\n    })\n    .catch(() => {\n      // 롤백\n      setLikeCount(likeCount);\n      setHasClicked(false);\n    });\n  };\n\n  const handleDislike = () => {\n    const newDislikeCount = dislikeCount + 1;\n    setDislikeCount(newDislikeCount);\n    setHasClicked(true);\n\n    fetch('/api/like', { // 서버에서 like와 dislike를 같은 엔드포인트로 처리하는 경우\n      method: 'POST',\n      body: JSON.stringify({ menuName, action: 'dislike' }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n    .then(response => response.json())\n    .then(data => {\n      setLikeCount(data.likes);\n      setDislikeCount(data.dislikes);\n    })\n    .catch(() => {\n      // 롤백\n      setDislikeCount(dislikeCount);\n      setHasClicked(false);\n    });\n  };\n\n  return (\n    <div className=\"frame\">\n      <Picture url={pictureUrl} />\n      <MenuName menuName={menuName} />\n      <State getSignal={initialState} />\n      <BestComment bestComment={bestComment} />\n      <LikeDislike downRate={dislikeCount} upRate={likeCount} onLike={handleLike} onDislike={handleDislike} hasClicked={hasClicked} />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}