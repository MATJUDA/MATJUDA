{"ast":null,"code":"import React,{useState}from'react';import BestComment from'../bestComment/BestComment';import LikeDislike from'../like_dislike/LikeDislike';import MenuName from'../menuName/MenuName';import Picture from'../picture/Picture';import State from'../state/State';import'./style.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function MenuCard(_ref){let{pictureUrl,corner,menuName,initialState,bestComment,likes,dislikes}=_ref;const[likeCount,setLikeCount]=useState(likes);const[dislikeCount,setDislikeCount]=useState(dislikes);const[hasClicked,setHasClicked]=useState(false);const handleLike=()=>{const newLikeCount=likeCount+1;setLikeCount(newLikeCount);setHasClicked(true);fetch('/api/like',{method:'POST',body:JSON.stringify({menuName,action:'like'}),headers:{'Content-Type':'application/json'}}).then(response=>response.json()).then(data=>{setLikeCount(data.likes);setDislikeCount(data.dislikes);}).catch(()=>{// 롤백\nsetLikeCount(likeCount);setHasClicked(false);});};const handleDislike=()=>{const newDislikeCount=dislikeCount+1;setDislikeCount(newDislikeCount);setHasClicked(true);fetch('/api/like',{// 서버에서 like와 dislike를 같은 엔드포인트로 처리하는 경우\nmethod:'POST',body:JSON.stringify({menuName,action:'dislike'}),headers:{'Content-Type':'application/json'}}).then(response=>response.json()).then(data=>{setLikeCount(data.likes);setDislikeCount(data.dislikes);}).catch(()=>{// 롤백\nsetDislikeCount(dislikeCount);setHasClicked(false);});};return/*#__PURE__*/_jsxs(\"div\",{className:\"frame\",children:[/*#__PURE__*/_jsx(Picture,{url:pictureUrl}),/*#__PURE__*/_jsx(MenuName,{corner:corner,menuName:menuName}),/*#__PURE__*/_jsx(State,{getSignal:initialState}),/*#__PURE__*/_jsx(BestComment,{bestComment:bestComment}),/*#__PURE__*/_jsx(LikeDislike,{downRate:dislikeCount,upRate:likeCount,onLike:handleLike,onDislike:handleDislike,hasClicked:hasClicked})]});}","map":{"version":3,"names":["React","useState","BestComment","LikeDislike","MenuName","Picture","State","jsx","_jsx","jsxs","_jsxs","MenuCard","_ref","pictureUrl","corner","menuName","initialState","bestComment","likes","dislikes","likeCount","setLikeCount","dislikeCount","setDislikeCount","hasClicked","setHasClicked","handleLike","newLikeCount","fetch","method","body","JSON","stringify","action","headers","then","response","json","data","catch","handleDislike","newDislikeCount","className","children","url","getSignal","downRate","upRate","onLike","onDislike"],"sources":["/Users/bblogs/Desktop/matjuda1/src/components/menuCard/MenuCard.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport BestComment from '../bestComment/BestComment';\nimport LikeDislike from '../like_dislike/LikeDislike';\nimport MenuName from '../menuName/MenuName';\nimport Picture from '../picture/Picture';\nimport State from '../state/State';\nimport './style.css';\n\nexport default function MenuCard({ pictureUrl, corner, menuName, initialState, bestComment, likes, dislikes }) {\n  const [likeCount, setLikeCount] = useState(likes);\n  const [dislikeCount, setDislikeCount] = useState(dislikes);\n  const [hasClicked, setHasClicked] = useState(false);\n\n  const handleLike = () => {\n    const newLikeCount = likeCount + 1;\n    setLikeCount(newLikeCount);\n    setHasClicked(true);\n \n    fetch('/api/like', {\n      method: 'POST',\n      body: JSON.stringify({ menuName, action: 'like' }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n    .then(response => response.json())\n    .then(data => {\n      setLikeCount(data.likes);\n      setDislikeCount(data.dislikes);\n    })\n    .catch(() => {\n      // 롤백\n      setLikeCount(likeCount);\n      setHasClicked(false);\n    });\n  };\n\n  const handleDislike = () => {\n    const newDislikeCount = dislikeCount + 1;\n    setDislikeCount(newDislikeCount);\n    setHasClicked(true);\n\n    fetch('/api/like', { // 서버에서 like와 dislike를 같은 엔드포인트로 처리하는 경우\n      method: 'POST',\n      body: JSON.stringify({ menuName, action: 'dislike' }),\n      headers: { 'Content-Type': 'application/json' },\n    })\n    .then(response => response.json())\n    .then(data => {\n      setLikeCount(data.likes);\n      setDislikeCount(data.dislikes);\n    })\n    .catch(() => {\n      // 롤백\n      setDislikeCount(dislikeCount);\n      setHasClicked(false);\n    });\n  };\n\n  return (\n    <div className=\"frame\">\n      <Picture url={pictureUrl} />\n      <MenuName corner={corner}menuName={menuName} />\n      <State getSignal={initialState} />\n      <BestComment bestComment={bestComment} />\n      <LikeDislike downRate={dislikeCount} upRate={likeCount} onLike={handleLike} onDislike={handleDislike} hasClicked={hasClicked} />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}