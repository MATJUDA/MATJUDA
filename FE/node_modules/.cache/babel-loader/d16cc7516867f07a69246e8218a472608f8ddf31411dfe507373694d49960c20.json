{"ast":null,"code":"var _jsxFileName = \"/Users/bblogs/Desktop/matjuda1/src/components/menuCard/MenuCard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import BestComment from '../bestComment/BestComment';\n// import LikeDislike from '../like_dislike/LikeDislike';\n// import MenuName from '../menuName/MenuName';\n// import Picture from '../picture/Picture';\n// import State from '../state/State';\n// import './style.css';\n\n// export default function MenuCard({ pictureUrl, corner, menuName, initialState, bestComment, likes, dislikes }) {\n//   const [likeCount, setLikeCount] = useState(likes);\n//   const [dislikeCount, setDislikeCount] = useState(dislikes);\n//   const [hasClicked, setHasClicked] = useState(false);\n\n//   const handleLike = () => {\n//     const newLikeCount = likeCount + 1;\n//     setLikeCount(newLikeCount);\n//     setHasClicked(true);\n\n//     fetch('/api/like', {\n//       method: 'POST',\n//       body: JSON.stringify({ menuName, action: 'like' }),\n//       headers: { 'Content-Type': 'application/json' },\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       setLikeCount(data.likes);\n//       setDislikeCount(data.dislikes);\n//     })\n//     .catch(() => {\n//       // 롤백\n//       setLikeCount(likeCount);\n//       setHasClicked(false);\n//     });\n//   };\n\n//   const handleDislike = () => {\n//     const newDislikeCount = dislikeCount + 1;\n//     setDislikeCount(newDislikeCount);\n//     setHasClicked(true);\n\n//     fetch('/api/like', { // 서버에서 like와 dislike를 같은 엔드포인트로 처리하는 경우\n//       method: 'POST',\n//       body: JSON.stringify({ menuName, action: 'dislike' }),\n//       headers: { 'Content-Type': 'application/json' },\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       setLikeCount(data.likes);\n//       setDislikeCount(data.dislikes);\n//     })\n//     .catch(() => {\n//       // 롤백\n//       setDislikeCount(dislikeCount);\n//       setHasClicked(false);\n//     });\n//   };\n\n//   return (\n//     <div className=\"frame\">\n//       <Picture url={pictureUrl} />\n//       <MenuName corner={corner}menuName={menuName} />\n//       <State getSignal={initialState} />\n//       <BestComment bestComment={bestComment} />\n//       <LikeDislike downRate={dislikeCount} upRate={likeCount} onLike={handleLike} onDislike={handleDislike} hasClicked={hasClicked} />\n//     </div>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport BestComment from \"../bestComment/BestComment\";\nimport LikeDislike from \"../like_dislike/LikeDislike\";\nimport MenuName from \"../menuName/MenuName\";\nimport Picture from \"../picture/Picture\";\nimport State from \"../state/State\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MenuCard({\n  details = {},\n  initialState,\n  bestComment,\n  likes,\n  dislikes\n}) {\n  _s();\n  const {\n    pictureUrl,\n    corner,\n    menuName\n  } = details;\n  const [likeCount, setLikeCount] = useState(likes);\n  const [dislikeCount, setDislikeCount] = useState(dislikes);\n  const [hasClicked, setHasClicked] = useState(false);\n  const handleLike = () => {\n    const newLikeCount = likeCount + 1;\n    setLikeCount(newLikeCount);\n    setHasClicked(true);\n    fetch(\"/api/like\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        menuName,\n        action: \"like\"\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      setLikeCount(data.likes);\n      setDislikeCount(data.dislikes);\n    }).catch(() => {\n      // 롤백\n      setLikeCount(likeCount);\n      setHasClicked(false);\n    });\n  };\n  const handleDislike = () => {\n    const newDislikeCount = dislikeCount + 1;\n    setDislikeCount(newDislikeCount);\n    setHasClicked(true);\n    fetch(\"/api/like\", {\n      // 서버에서 like와 dislike를 같은 엔드포인트로 처리하는 경우\n      method: \"POST\",\n      body: JSON.stringify({\n        menuName,\n        action: \"dislike\"\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      setLikeCount(data.likes);\n      setDislikeCount(data.dislikes);\n    }).catch(() => {\n      // 롤백\n      setDislikeCount(dislikeCount);\n      setHasClicked(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"frame\",\n    children: [pictureUrl && /*#__PURE__*/_jsxDEV(Picture, {\n      url: pictureUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 22\n    }, this), corner && menuName && /*#__PURE__*/_jsxDEV(MenuName, {\n      corner: corner,\n      menuName: menuName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(State, {\n      getSignal: initialState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), bestComment && /*#__PURE__*/_jsxDEV(BestComment, {\n      bestComment: bestComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(LikeDislike, {\n      downRate: dislikeCount,\n      upRate: likeCount,\n      onLike: handleLike,\n      onDislike: handleDislike,\n      hasClicked: hasClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(MenuCard, \"/97wNAbRPAvjCXyrIsaHZgcgKOE=\");\n_c = MenuCard;\nvar _c;\n$RefreshReg$(_c, \"MenuCard\");","map":{"version":3,"names":["React","useState","BestComment","LikeDislike","MenuName","Picture","State","jsxDEV","_jsxDEV","MenuCard","details","initialState","bestComment","likes","dislikes","_s","pictureUrl","corner","menuName","likeCount","setLikeCount","dislikeCount","setDislikeCount","hasClicked","setHasClicked","handleLike","newLikeCount","fetch","method","body","JSON","stringify","action","headers","then","response","json","data","catch","handleDislike","newDislikeCount","className","children","url","fileName","_jsxFileName","lineNumber","columnNumber","getSignal","downRate","upRate","onLike","onDislike","_c","$RefreshReg$"],"sources":["/Users/bblogs/Desktop/matjuda1/src/components/menuCard/MenuCard.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import BestComment from '../bestComment/BestComment';\n// import LikeDislike from '../like_dislike/LikeDislike';\n// import MenuName from '../menuName/MenuName';\n// import Picture from '../picture/Picture';\n// import State from '../state/State';\n// import './style.css';\n\n// export default function MenuCard({ pictureUrl, corner, menuName, initialState, bestComment, likes, dislikes }) {\n//   const [likeCount, setLikeCount] = useState(likes);\n//   const [dislikeCount, setDislikeCount] = useState(dislikes);\n//   const [hasClicked, setHasClicked] = useState(false);\n\n//   const handleLike = () => {\n//     const newLikeCount = likeCount + 1;\n//     setLikeCount(newLikeCount);\n//     setHasClicked(true);\n\n//     fetch('/api/like', {\n//       method: 'POST',\n//       body: JSON.stringify({ menuName, action: 'like' }),\n//       headers: { 'Content-Type': 'application/json' },\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       setLikeCount(data.likes);\n//       setDislikeCount(data.dislikes);\n//     })\n//     .catch(() => {\n//       // 롤백\n//       setLikeCount(likeCount);\n//       setHasClicked(false);\n//     });\n//   };\n\n//   const handleDislike = () => {\n//     const newDislikeCount = dislikeCount + 1;\n//     setDislikeCount(newDislikeCount);\n//     setHasClicked(true);\n\n//     fetch('/api/like', { // 서버에서 like와 dislike를 같은 엔드포인트로 처리하는 경우\n//       method: 'POST',\n//       body: JSON.stringify({ menuName, action: 'dislike' }),\n//       headers: { 'Content-Type': 'application/json' },\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       setLikeCount(data.likes);\n//       setDislikeCount(data.dislikes);\n//     })\n//     .catch(() => {\n//       // 롤백\n//       setDislikeCount(dislikeCount);\n//       setHasClicked(false);\n//     });\n//   };\n\n//   return (\n//     <div className=\"frame\">\n//       <Picture url={pictureUrl} />\n//       <MenuName corner={corner}menuName={menuName} />\n//       <State getSignal={initialState} />\n//       <BestComment bestComment={bestComment} />\n//       <LikeDislike downRate={dislikeCount} upRate={likeCount} onLike={handleLike} onDislike={handleDislike} hasClicked={hasClicked} />\n//     </div>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport BestComment from \"../bestComment/BestComment\";\nimport LikeDislike from \"../like_dislike/LikeDislike\";\nimport MenuName from \"../menuName/MenuName\";\nimport Picture from \"../picture/Picture\";\nimport State from \"../state/State\";\nimport \"./style.css\";\n\nexport default function MenuCard({\n  details = {},\n  initialState,\n  bestComment,\n  likes,\n  dislikes,\n}) {\n  const { pictureUrl, corner, menuName } = details;\n  const [likeCount, setLikeCount] = useState(likes);\n  const [dislikeCount, setDislikeCount] = useState(dislikes);\n  const [hasClicked, setHasClicked] = useState(false);\n\n  const handleLike = () => {\n    const newLikeCount = likeCount + 1;\n    setLikeCount(newLikeCount);\n    setHasClicked(true);\n\n    fetch(\"/api/like\", {\n      method: \"POST\",\n      body: JSON.stringify({ menuName, action: \"like\" }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setLikeCount(data.likes);\n        setDislikeCount(data.dislikes);\n      })\n      .catch(() => {\n        // 롤백\n        setLikeCount(likeCount);\n        setHasClicked(false);\n      });\n  };\n\n  const handleDislike = () => {\n    const newDislikeCount = dislikeCount + 1;\n    setDislikeCount(newDislikeCount);\n    setHasClicked(true);\n\n    fetch(\"/api/like\", {\n      // 서버에서 like와 dislike를 같은 엔드포인트로 처리하는 경우\n      method: \"POST\",\n      body: JSON.stringify({ menuName, action: \"dislike\" }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setLikeCount(data.likes);\n        setDislikeCount(data.dislikes);\n      })\n      .catch(() => {\n        // 롤백\n        setDislikeCount(dislikeCount);\n        setHasClicked(false);\n      });\n  };\n\n  return (\n    <div className=\"frame\">\n      {pictureUrl && <Picture url={pictureUrl} />}\n      {corner && menuName && <MenuName corner={corner} menuName={menuName} />}\n      <State getSignal={initialState} />\n      {bestComment && <BestComment bestComment={bestComment} />}\n      <LikeDislike\n        downRate={dislikeCount}\n        upRate={likeCount}\n        onLike={handleLike}\n        onDislike={handleDislike}\n        hasClicked={hasClicked}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}